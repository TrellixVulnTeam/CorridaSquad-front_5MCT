{"ast":null,"code":"import { asyncScheduler } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/from';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { caughtSchedule } from '../util/caughtSchedule';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport var TimeoutError = createErrorClass(function (_super) {\n  return function TimeoutErrorImpl(info) {\n    if (info === void 0) {\n      info = null;\n    }\n\n    _super(this);\n\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    this.info = info;\n  };\n});\nexport function timeout(config, schedulerArg) {\n  var _a = isValidDate(config) ? {\n    first: config\n  } : typeof config === 'number' ? {\n    each: config\n  } : config,\n      first = _a.first,\n      each = _a.each,\n      _b = _a.with,\n      _with = _b === void 0 ? timeoutErrorFactory : _b,\n      _c = _a.scheduler,\n      scheduler = _c === void 0 ? schedulerArg !== null && schedulerArg !== void 0 ? schedulerArg : asyncScheduler : _c,\n      _d = _a.meta,\n      meta = _d === void 0 ? null : _d;\n\n  if (first == null && each == null) {\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate(function (source, subscriber) {\n    var originalSourceSubscription;\n    var timerSubscription;\n    var lastValue = null;\n    var seen = 0;\n\n    var startTimer = function (delay) {\n      timerSubscription = caughtSchedule(subscriber, scheduler, function () {\n        originalSourceSubscription.unsubscribe();\n        innerFrom(_with({\n          meta: meta,\n          lastValue: lastValue,\n          seen: seen\n        })).subscribe(subscriber);\n      }, delay);\n    };\n\n    originalSourceSubscription = source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\n      seen++;\n      subscriber.next(lastValue = value);\n      each > 0 && startTimer(each);\n    }, undefined, undefined, function () {\n      if (!(timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.closed)) {\n        timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\n      }\n\n      lastValue = null;\n    }));\n    startTimer(first != null ? typeof first === 'number' ? first : +first - scheduler.now() : each);\n  });\n}\n\nfunction timeoutErrorFactory(info) {\n  throw new TimeoutError(info);\n}","map":{"version":3,"sources":["C:/Users/enobre/Desktop/corridaFront/node_modules/rxjs/dist/esm5/internal/operators/timeout.js"],"names":["asyncScheduler","isValidDate","operate","innerFrom","createErrorClass","caughtSchedule","OperatorSubscriber","TimeoutError","_super","TimeoutErrorImpl","info","message","name","timeout","config","schedulerArg","_a","first","each","_b","with","_with","timeoutErrorFactory","_c","scheduler","_d","meta","TypeError","source","subscriber","originalSourceSubscription","timerSubscription","lastValue","seen","startTimer","delay","unsubscribe","subscribe","value","next","undefined","closed","now"],"mappings":"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","sourcesContent":["import { asyncScheduler } from '../scheduler/async';\r\nimport { isValidDate } from '../util/isDate';\r\nimport { operate } from '../util/lift';\r\nimport { innerFrom } from '../observable/from';\r\nimport { createErrorClass } from '../util/createErrorClass';\r\nimport { caughtSchedule } from '../util/caughtSchedule';\r\nimport { OperatorSubscriber } from './OperatorSubscriber';\r\nexport var TimeoutError = createErrorClass(function (_super) {\r\n    return function TimeoutErrorImpl(info) {\r\n        if (info === void 0) { info = null; }\r\n        _super(this);\r\n        this.message = 'Timeout has occurred';\r\n        this.name = 'TimeoutError';\r\n        this.info = info;\r\n    };\r\n});\r\nexport function timeout(config, schedulerArg) {\r\n    var _a = (isValidDate(config)\r\n        ? { first: config }\r\n        : typeof config === 'number'\r\n            ? { each: config }\r\n            : config), first = _a.first, each = _a.each, _b = _a.with, _with = _b === void 0 ? timeoutErrorFactory : _b, _c = _a.scheduler, scheduler = _c === void 0 ? schedulerArg !== null && schedulerArg !== void 0 ? schedulerArg : asyncScheduler : _c, _d = _a.meta, meta = _d === void 0 ? null : _d;\r\n    if (first == null && each == null) {\r\n        throw new TypeError('No timeout provided.');\r\n    }\r\n    return operate(function (source, subscriber) {\r\n        var originalSourceSubscription;\r\n        var timerSubscription;\r\n        var lastValue = null;\r\n        var seen = 0;\r\n        var startTimer = function (delay) {\r\n            timerSubscription = caughtSchedule(subscriber, scheduler, function () {\r\n                originalSourceSubscription.unsubscribe();\r\n                innerFrom(_with({\r\n                    meta: meta,\r\n                    lastValue: lastValue,\r\n                    seen: seen,\r\n                })).subscribe(subscriber);\r\n            }, delay);\r\n        };\r\n        originalSourceSubscription = source.subscribe(new OperatorSubscriber(subscriber, function (value) {\r\n            timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\r\n            seen++;\r\n            subscriber.next((lastValue = value));\r\n            each > 0 && startTimer(each);\r\n        }, undefined, undefined, function () {\r\n            if (!(timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.closed)) {\r\n                timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\r\n            }\r\n            lastValue = null;\r\n        }));\r\n        startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler.now()) : each);\r\n    });\r\n}\r\nfunction timeoutErrorFactory(info) {\r\n    throw new TimeoutError(info);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}