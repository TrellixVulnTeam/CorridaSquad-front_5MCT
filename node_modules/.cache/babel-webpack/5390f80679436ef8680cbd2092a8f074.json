{"ast":null,"code":"import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime, intervalOrScheduler, scheduler) {\n  if (dueTime === void 0) {\n    dueTime = 0;\n  }\n\n  if (scheduler === void 0) {\n    scheduler = asyncScheduler;\n  }\n\n  var intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable(function (subscriber) {\n    var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n\n    if (due < 0) {\n      due = 0;\n    }\n\n    var n = 0;\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          this.schedule(undefined, intervalDuration);\n        } else {\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}","map":{"version":3,"sources":["C:/Users/enobre/Desktop/corridaFront/node_modules/rxjs/dist/esm5/internal/observable/timer.js"],"names":["Observable","async","asyncScheduler","isScheduler","isValidDate","timer","dueTime","intervalOrScheduler","scheduler","intervalDuration","subscriber","due","now","n","schedule","closed","next","undefined","complete"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,KAAK,IAAIC,cAAlB,QAAwC,oBAAxC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,SAASC,KAAT,CAAeC,OAAf,EAAwBC,mBAAxB,EAA6CC,SAA7C,EAAwD;AAC3D,MAAIF,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,CAAV;AAAc;;AACxC,MAAIE,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAGN,cAAZ;AAA6B;;AACzD,MAAIO,gBAAgB,GAAG,CAAC,CAAxB;;AACA,MAAIF,mBAAmB,IAAI,IAA3B,EAAiC;AAC7B,QAAIJ,WAAW,CAACI,mBAAD,CAAf,EAAsC;AAClCC,MAAAA,SAAS,GAAGD,mBAAZ;AACH,KAFD,MAGK;AACDE,MAAAA,gBAAgB,GAAGF,mBAAnB;AACH;AACJ;;AACD,SAAO,IAAIP,UAAJ,CAAe,UAAUU,UAAV,EAAsB;AACxC,QAAIC,GAAG,GAAGP,WAAW,CAACE,OAAD,CAAX,GAAuB,CAACA,OAAD,GAAWE,SAAS,CAACI,GAAV,EAAlC,GAAoDN,OAA9D;;AACA,QAAIK,GAAG,GAAG,CAAV,EAAa;AACTA,MAAAA,GAAG,GAAG,CAAN;AACH;;AACD,QAAIE,CAAC,GAAG,CAAR;AACA,WAAOL,SAAS,CAACM,QAAV,CAAmB,YAAY;AAClC,UAAI,CAACJ,UAAU,CAACK,MAAhB,EAAwB;AACpBL,QAAAA,UAAU,CAACM,IAAX,CAAgBH,CAAC,EAAjB;;AACA,YAAI,KAAKJ,gBAAT,EAA2B;AACvB,eAAKK,QAAL,CAAcG,SAAd,EAAyBR,gBAAzB;AACH,SAFD,MAGK;AACDC,UAAAA,UAAU,CAACQ,QAAX;AACH;AACJ;AACJ,KAVM,EAUJP,GAVI,CAAP;AAWH,GAjBM,CAAP;AAkBH","sourcesContent":["import { Observable } from '../Observable';\r\nimport { async as asyncScheduler } from '../scheduler/async';\r\nimport { isScheduler } from '../util/isScheduler';\r\nimport { isValidDate } from '../util/isDate';\r\nexport function timer(dueTime, intervalOrScheduler, scheduler) {\r\n    if (dueTime === void 0) { dueTime = 0; }\r\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\r\n    var intervalDuration = -1;\r\n    if (intervalOrScheduler != null) {\r\n        if (isScheduler(intervalOrScheduler)) {\r\n            scheduler = intervalOrScheduler;\r\n        }\r\n        else {\r\n            intervalDuration = intervalOrScheduler;\r\n        }\r\n    }\r\n    return new Observable(function (subscriber) {\r\n        var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\r\n        if (due < 0) {\r\n            due = 0;\r\n        }\r\n        var n = 0;\r\n        return scheduler.schedule(function () {\r\n            if (!subscriber.closed) {\r\n                subscriber.next(n++);\r\n                if (0 <= intervalDuration) {\r\n                    this.schedule(undefined, intervalDuration);\r\n                }\r\n                else {\r\n                    subscriber.complete();\r\n                }\r\n            }\r\n        }, due);\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}